{"ast":null,"code":"var _jsxFileName = \"/Users/Julia/Documents/ReduxNew/songs/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport SongList from './containers/SongList';\nimport SongView from './containers/SongView'; //get the rootReducer to pass for STORE creation\n\nimport reducers from './reducers'; // doesn't require braces bc it's a DEFAULT EXPORT\n//if I sourced out <App/>, it would be a 'dumb' component, not a container (bc it doesn't care about the app state, it just imports the containers)\n\nvar App = function App() {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui two column centered grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"two column row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"ui huge header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Simple React/Redux List Picker\")), React.createElement(SongList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(SongView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/Julia/Documents/ReduxNew/songs/src/index.js"],"names":["React","ReactDOM","Provider","createStore","SongList","SongView","reducers","App","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAiC;AACjC;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CADF;AAYD,CAbD;;AAeAN,QAAQ,CAACO,MAAT,CACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,WAAW,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADA,EAGaG,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAHb","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport SongList from './containers/SongList'\nimport SongView from './containers/SongView'\n//get the rootReducer to pass for STORE creation\nimport reducers from './reducers'// doesn't require braces bc it's a DEFAULT EXPORT\n//if I sourced out <App/>, it would be a 'dumb' component, not a container (bc it doesn't care about the app state, it just imports the containers)\nconst App = () => {\n  return (\n    <React.Fragment>\n     \n      <div className=\"ui two column centered grid\">\n        <div className=\"two column row\">\n          <h2 className=\"ui huge header\">Simple React/Redux List Picker</h2>\n        </div>\n        <SongList />\n        <SongView />\n      </div>\n    </React.Fragment>\n  )\n}\n\nReactDOM.render(\n<Provider store={createStore(reducers)}>\n  <App />\n</Provider>, document.querySelector('#root'))"]},"metadata":{},"sourceType":"module"}